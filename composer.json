{
  "scripts": {
    "setup": "composer run db:port && composer run db:start && composer run db:wait && composer run wp:core:download && composer run wp:config:create && composer run wp:core:install && composer run wp:login:install && composer run site:link",
    "clear": "composer db:drop && composer db:stop && rm -fr wordpress db-port",
    "reset": "composer run clear && composer run setup",
    "db:port": "@php setup.php db-port",
    "db:wait": "@php wait-for-db.php 2>&1",
    "db:start": "install -d db-data && port=`cat db-port` && domain=$(basename `pwd`) && docker run -d --rm --mount src=$(pwd)/db-data,target=/var/lib/mysql/wordpress,type=bind --name $domain-db -p $port:3306 -e MYSQL_RANDOM_ROOT_PASSWORD=1 -e MYSQL_DATABASE=wordpress -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress mariadb",
    "db:drop": "domain=$(basename `pwd`) && (docker exec $domain-db rm -fr /var/lib/mysql/wordpress/ >> /dev/null 2>&1) || true",
    "db:drop2": "domain=$(basename `pwd`) && docker exec $domain-db mysql -u wordpress -pwordpress -e 'SELECT concat('DROP TABLE IF EXISTS `', table_name, '`;') FROM information_schema.tables WHERE table_schema = 'wordpress';'",
    "db:tests": "domain=$(basename `pwd`) && docker exec $domain-db mysql -u wordpress -pwordpress -e 'DROP SCHEMA IF EXISTS tests; CREATE SCHEMA tests;'",
    "db:stop": "domain=$(basename `pwd`) && (docker stop $domain-db >> /dev/null 2>&1 || true)",
    "db:adminer": "port=$((`cat db-port`+1)) && domain=$(basename `pwd`) && docker run -d --link $domain-db:db -p $port:8080 adminer",
    "db:manage": "port=$((`cat db-port`+1)) && xdg-open http://0.0.0.0:$port",
    "wp:config:delete": "rm wordpress/wp-config.php",
    "wp:config:create": "port=`cat db-port` && wp config create --dbname=wordpress --dbuser=wordpress --dbhost=0.0.0.0:$port --dbpass=wordpress",
    "wp:config:recreate": "composer run wp:config:delete && composer run wp:config:create",
    "wp:core:download": "wp core download --path=wordpress",
    "wp:core:install": "root_domain=$(basename `pwd`).test && wp core install --url=https://${root_domain} --title=Test --admin_user=admin --admin_email=admin@${root_domain} --admin_password=password --skip-email",
    "wp:login:install": "wp package install aaemnnosttv/wp-cli-login-command && wp login install --activate --yes",
    "wp:login:uninstall": "wp package uninstall aaemnnosttv/wp-cli-login-command",
    "site:link": "domain=$(basename `pwd`) && cd wordpress && valet unlink $domain && valet link $domain && valet secure",
    "site:go": "root_domain=$(basename `pwd`).test && xdg-open https://${root_domain}",
    "site:open": "composer run site:go",
    "site:visit": "composer run site:go",
    "site:admin": "xdg-open $(wp login as admin --url-only)",
    "site:dashboard": "composer run site:admin",
    "site:login": "composer run site:admin"
  }
}
